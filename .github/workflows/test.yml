name: CI & CD
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
  
permissions:
  contents: read


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Upload html test report
        uses: actions/upload-artifact@v3.1.1
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html

  unit-test:
    name: Run Unit Tests
    needs: [lint]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Cache gradle
      - name: Cache Gradle and wrapper
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: cache-${{ runner.os }}-${{ matrix.jdk }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Run Unit tests
        run: bash ./gradlew test --stacktrace
      
      - name: Upload test report
        uses: actions/upload-artifact@v3.1.1
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDebugUnitTest/

  instrumentation-test:
    needs: [unit-test]
    runs-on: macos-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Run espresso tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck

      - name: Upload test report
        uses: actions/upload-artifact@v3.1.1
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/

  static-code-analysis:
    needs: [instrumentation-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: set up JDK 11
        uses: actions/setup-java@v3.8.0
        with:
          java-version: 11
          distribution: 'temurin'

      - name: SonarCloud Scan
        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
      name: Generate APK
      needs: [static-code-analysis]
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3
        - name: Setup Java JDK
          uses: actions/setup-java@v3.8.0
          with:
            java-version: 11
            distribution: 'temurin'

        - name: Grant Permission to Execute
          run: chmod +x gradlew

        - name: Build debug APK
          run: bash ./gradlew assembleDebug --stacktrace

        - name: Upload APK to Github Artifacts
          uses: actions/upload-artifact@v3.1.1
          with:
            name: app
            path: app/build/outputs/apk/debug/app-debug.apk
  
  delevery-on-telegram:
    name: Send Apk on Telegram
    needs: [package]
    runs-on: ubuntu-latest
    steps:
      - name: Download Stored Artifact
        uses: actions/download-artifact@v3
        with:
          name: app

      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Hi Guys,
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            

            Created By @JahidHasanCo

          document: app-debug.apk
          


